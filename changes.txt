Version History:
---------------

1.11.1.2:
. Added new functions for working with blocks of codes:
  ado-balance-braces will balance {[()]} outside of strings and
  comments. Used multiple times, it will keep expanding matching pairs.
  It is bound to C-c C-b.
  While this is nice, ado-grab-block is nicer. It will balance only {},
  which is useful for grabbing blocks of commands. Because this will
  often be used with loops, it will also grab whatever defines the loop.
  Repeated use will grab the nesting blocks.
  For both of the above, a region is selected, so the region can be sent
  to Stata in the usual fashion.
  If you are sure that you want to submit the current narrowest block,
  you can use ado-send-block-to-stata, which is simply an ado-grab-block
  followd by an ado-send-command-to-stata. This is bound to C-c M-b.
  One warning: in this initial version, emacs' default behavior is
  followed, where different braces can match if there are unbalanced
  braces. Thus {these DO balance].

1.11.1.1:
. Added fontification for ado files in Stata's -sysdir- locations. So,
  for example, if you download the command -renvars-, -renvars- will now
  use have syntax highlighting in emacs. For this to work, you *must*
  run M-x customize-group RET ado-path to tell emacs what directories
  house your customizations. Look at the personal_scrap.el file for more
  help on doing this automatically. It's magical. Really. Since this is
  so magical, its features might change based on feedback. 
. Added new functions ado-next-error and ado-prev-error, which search
  for something indicating an error (in a text file, a non-zero return
  code, in a smcl file an {err} tag). If tracing is on, this will jump
  to the line creating the error rather than the tag or error code
  itself.
. Fixed an embarrassing bug for using the comeback flag in windows. It
  looks like I didn't test it much originally, if at all.
1.11.1.0:
. Updated for Stata 11.1
. Big internal change: got rid of make-regexps in favor of regexp-opt,
  so that all called functions were part of standard emacs. Though
  make-regexps was nice to use, it was way out of date.
. Split all the endless font-locking code into its own file, so that
  others who would like to use it in their own packages will have an
  easier time. 
. Fixed the silly *Async Shell Command* buffer problem when sending code
  to Stata in MS Windows.
. Various highlighting bug fixes.

1.11.0.1:
. Fixed a bug where sending code to Stata from MS Windows via a do-file
  failed.

1.11.0.0:
. Added functionality for sending code to Stata in MS Windows. So...it
  is now possible to send code to Stata from both Mac OS X and MS
  Windows. The default keystroke is M-RET.
  (MS Windows note: when sending to Stata, *Async Shell Command* buffer
  will open. Since you cannot avoid this, just make the pane as small as
  possible. I cannot figure out how to get autoit's executable to run
  synchronously with emacs.)
. Added functionality for getting help for commands directly from emacs.
  C-cC-c gets help for the command, C-cC-h gets help for word at point.
  Because these work via sending commands, they are also Mac/Win only.
. Fixed highlighting for -estat classification- abbreviations
. Fixed problems with spaces in paths when using ado-send-to-stata
. Fixed some typos in the documentation of functions
. Updated for Staga 11 commands, including new commands and marking
  obsolete commands as such
. Changed the templates to default to version 11

1.10.1.2:
. (Finally) changed the update of the time stamp to not add the old
timestamp to the kill ring.
. Fixed a bug where stripping comments failed when there were tabs as
part of the whitespace before the comment string. This could occur when
lines were split. To shut off tabs when splitting lines, set
indent-tabs-mode to nil.

1.10.1.1: 
. Added functionality for sending regions or commands to Stata, at least
  inside Mac OS X(!). The design *should* make it possible to implement the
  same behavior in MS Windows or Unix, because the code for putting the proper
  information on the clipboard is written to be platform independent. The
  methods for getting the clipboard to Stata itself are not (of course).
  All that is needed is something which will paste the
  clipboard/pasteboard into Stata's command window. Everything else is
  internal to emacs. Look inside ado-to-stata.el to see how things are
  sent via applescript on the Mac.
  If you come up with a script for unix or windows, please send it to
  me, so I can change the functionality of ado-mode to be more
  platform-agnostic (brising at mac dot com).
  If you use MS Windows or Unix, there is some consolation, because
  running M-RET will take the function containing the point (or the
  region if one is selected) and put it in the clipboard in a way the
  Commmand window can use it. All you need to do is paste into the
  Command window. 
. Along with this functionality is the ability to get help from Stata
  for the word at point. (ado-help-at-point, bound to C-c C-h, and
  ado-help-command, bound to C-c C-c)
. A key binding has changed. Meta-Return now sends the
  region/command to Stata, and Shift-Meta-Return splits a line.
  In OSes which don't work directly with Stata, Meta-Return will put 
  a version of the region or the command in which point is sitting on
  the clipboard, so it can be pasted in the command window.
. Fixed up the methods for determining the type of file and the default
  name. NOTE: for .ado or .class files, the name of the program or class
  must come in the first 200 characters of the file. Lesson: if you use a
  helper program in a do-file, be sure to wait a little before defining
  it. The 200-character cutoff is entirely arbitrary.
. Added a newer (and better) definition of `how-many' to the ado-hacks.el
  file for users who haven't yet updated to emacs 22.1.1.
. Added ado-new-ado for a new ado file. This is identical to ado-new-program. 
. Added do.blp and ado-new-do to make do-files which both log and can be nested.
. Added mata.blp and ado-new-mata to make mata definition files.
. Fixed ado-new-generic to be smarter about naming new files (like mata files). 
. Added new preference flag for updating timestamps... they now can be shut
  off. This is accessible from the Ado-mode->Options menu, like all other
  flags for formatting.
. Added new random number generating functions.
. Finally made ado-insert-nice-current-date to interactively insert timestamps.
. Finally put in leading * comment highlighting.
. Updated the template for help files.

1.10.0.0: Added several bits of functionality suggested by Uli Kohler:
. changed method for indenting so that do-files are properly indented:
  the indentation is incremented by each defined program (program [define])
  and decremented by each end statement.
. it is now possible to choose a default column for continuation strings in
  similarly to that for comments. This column is respected by
  ado-split-line if ado-line-up-continuations is non-nil.
. created ado-macify-selection-or-word which will put `' around the current
  selection. If nothing is selected, but the point is in a word, it
  will put `' around the current word. Finally if the point surrounded by
  whitespace it will insert `' and leave point inside the macro.
. created ado-stringify-selection, which will put `""' around the current
  selection (if any). If nothing is selected, inserts `""' and leaves the
  point inside the quotations.
. created ado-strmacify-selection-or-word which macifies and then stringifies
  the object of interest.
Other changes:
. added Stata 10 commands, functions, and the like.
. now try to highlight ++ and -- following local macro defs as obsolete, as
  a warning to people like me who forget that the incrementation must
  preceed the macro name.
. changed indenting, so that mata: alone on a line will cause the
  following lines to indent (until an end statement is found).
. changed name of ado-help-file to ado-new-help.
. added new customizable variable ado-help-extension which can be
  toggled between its default of 'sthlp' and 'hlp' using 
  ado-toggle-help-extension.
. added ado-new-cscript for starting cert scripts.
. changed the menus a little to take advantage of contextual menus.
. changed versioning numbers, but kept increasing sequence.
. arbitrary bug fixes to some of the more complicated highlighting.

0.92.0: Added additional functions introduced in online updates. Some are
  from before the 20jan2006 update, sad to say. Fixed bug for indentation
  before special commands (like end or version). This changed the behavior
  of ado-beginning-of-command [M-a] to sit still when in a blank line when
  the delimiter is cr.
. fixed bad fontification 
.. of local when used as local ``foo'' with double quotes.   
.. of tempvar, tempfile, tempname when followed by quoted local macro.
. added code which runs if the user is using Aquamacs emacs. Not sure of
  the wisdom of having this in the main file, perhaps it will be broken out
  in the future. 

0.91.2: Added Mata functions introduced in the 20jan2006 update to Stata,
  and added the ado-hacks.el file, which includes a function defined in
  Stata 22, but not earlier: line-number-at-pos. This handy function is
  good for complicated indentations and for jumping back to the beginning
  of commands... but missing it will break emacs 21.whatever.

0.91.1: Separated change history off.
. changed format of new history entries
. changed all my addresses to my new job forgot this in 0.91.0.
. changed behavior for saving files to be more emacs-like.
.. When saving a file under its old name, there is no confirmation, like usual
   emacs saving
.. if ado-mode, ahem, corrects the file name *and* there is a saved file of that
   name in the default directory already, it *will* prompt, to avoid mistaken
   overwrites. 
.. thanks to Brendan Halpin for pointing this out
. fixed some minor programming badness, such as using insert-file when
  insert-file-contents was the proper command to use.
. fixed and improved indentation, so that continued commands with embedded
  comments are indented properly.
. fixed bugs in indentation when using a semi-colon for the delimiter
. changed method for comment indentation, so that /* and */ on different
  lines will line up, with the text on in-between lines indented to one
  extra level of indentation. (requested by Patrick Ball) 
. Mata changes
.. added new faces for current mata keywords, future mata keywords, and
   mata functions (though the mata function face defaults to the regular
   function face.
.. included all the mata functions, as far as I can tell.
.. did not change anything else with indentation for Mata functions.

0.91.0: Fixed highlighting to work with all new Stata commands
  except the new Mata commands. They will arrive in another update.
  No real changes to the underpinnings.

0.82.5: Fixed numerous problems with indenting and moving to
  the beginning and end of commands when using semi-colons as
  the delimiter. Bound M-e to ado-end-of-command. Fixed the
  behavior of this and ado-beginning-of-command. 

0.82.4: Hacked the highlighting to make embedded strings, a la
  `"this is "embedded", you know"'
  look right. Emacs won't treat them properly internally, but
  at least they will look like strings.

0.82.3: Added the new commands related to time series from the July 23,
  2004 update of Stata. Made the now obsolete -varfcast- and -varinf- show
  up as obsolete.

0.82.2: Fixed the bug where ado-mode got confused by opening .do files
  which had subprogram defined in them.

0.82.1: Added the new commands, macro extended commands and new SMCL
  directives from the July 1, 2004 update of Stata. Minor stuff.

0.82: Changed behavior when -do- files are saved to fix the bug that would cause 
  -do- files which defined programs to get saved as -ado- files named after the 
  first locally defined program. Other bug fixes for highlighting of some
  lesser-used constructions.

0.81: Changed behavior of open and close quotes (` and ') so that they no longer
  behave like parentheses, meaning that they don't flash and don't affect indentation.
  This should have been done earlier when ' was allowed for matrix transposition.

0.80: Serious upgrade: made to work with Stata 8, customization groups added,
  font-locking made more flexible, buffer-local changes to indentation and
  the like added.

<0.80: Updates for Stata changes - out-of-date emacs code.
